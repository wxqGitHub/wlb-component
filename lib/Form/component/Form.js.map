{"version":3,"sources":["../../../src/Form/component/Form.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqB,I;;;AACjB,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,4FACT,KADS;;AAEf,cAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,cAAK,cAAL,GAAsB,MAAK,cAAL,CAAoB,IAApB,OAAtB;AAHe;AAIlB;;;;0CAYiB;AACd,mBAAO;AACH,wBAAQ;AACJ,kCAAc,KAAK,YADf;AAEJ,oCAAgB,KAAK;AAFjB;AADL,aAAP;AAMH;;;6CAEoB;AACnB,iBAAK,MAAL,GAAc,EAAd;AACD;;;qCAEY,S,EAAW;AACpB,gBAAI,KAAK,MAAL,CAAY,OAAZ,CAAoB,SAApB,MAAmC,CAAC,CAAxC,EAA2C;AACzC,qBAAK,MAAL,CAAY,IAAZ,CAAiB,SAAjB;AACD;AACJ;;;uCAEc,S,EAAW;AACtB,gBAAI,eAAe,KAAK,MAAL,CAAY,OAAZ,CAAoB,SAApB,CAAnB;;AAEA,gBAAI,iBAAiB,CAAC,CAAtB,EAAyB;AACvB,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,YAArB,EACX,MADW,CACJ,KAAK,MAAL,CAAY,KAAZ,CAAkB,eAAe,CAAjC,CADI,CAAd;AAED;AACJ;;;qCAEW;AACR,gBAAI,wBAAJ;AACA,8BAAkB,KAAK,MAAL,CAAY,MAAZ,CAAmB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AACvD,uBAAQ,CAAC,6BAAY,UAAU,KAAV,CAAgB,WAA5B,EAAyC,UAAU,KAAV,CAAgB,MAAzD,CAAD,IAAqE,UAAU,KAAV,CAAgB,SAA7F;AACH,aAFiB,CAAlB;;AAIA,8BAAkB,gBAAgB,MAAhB,GAAyB,CAAzB,GAA6B,gBAAgB,CAAhB,CAA7B,GAAiD,eAAnE;;AAEA,gBAAG,gBAAgB,MAAhB,KAA2B,CAA9B,EAAgC;AAC5B,uBAAO,EAAE,SAAS,IAAX,EAAiB,SAAS,kBAA1B,EAAP;AACH,aAFD,MAEK;AACD,uBAAO,EAAC,SAAS,KAAV,EAAiB,SAAS,gBAAgB,KAAhB,CAAsB,eAAhD,EAAP;AACH;AACJ;;;mCACU;AACP,gBAAI,OAAO,EAAX;AACA,iBAAK,MAAL,CAAY,OAAZ,CAAoB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AACtC,qBAAK,UAAU,KAAV,CAAgB,IAArB,IAA6B,UAAU,KAAV,CAAgB,MAA7C;AACH,aAFD;AAGA,mBAAO,IAAP;AACH;;;+BAEM,K,EAAO;AACV,qBAAS,MAAM,cAAN,EAAT;;AAEA,gBAAI,SAAS,KAAK,UAAL,EAAb;AACA,gBAAG,OAAO,OAAV,EAAkB;AACd,oBAAI,QAAQ,KAAK,QAAL,EAAZ;AACA,qBAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,CAA0B,IAA1B,EAAgC,MAAhC,EAAwC,KAAxC;AACA,qBAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,IAAzB,EAA+B,KAA/B;AACH,aAJD,MAIK;AACD,qBAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,MAA9B;AACH;AACJ;;;iCAEQ;AAAA;;AAAA,gBACI,cADJ,4BACuB,KAAK,KAD5B;;AAEL,mBACI;AAAA;gBAAA,aAAU,cAAV,IAA0B,UAAU,kBAAC,CAAD;AAAA,+BAAO,OAAK,MAAL,CAAY,CAAZ,CAAP;AAAA,qBAApC;gBACK,KAAK,KAAL,CAAW;AADhB,aADJ;AAKH;;;;EAvF6B,gBAAM,S;;AAAnB,I,CAOV,Y,GAAe;AAClB,cAAU,oBAAU,CAAE,CADJ;AAElB,aAAS,mBAAU,CAAE,CAFH;AAGlB,eAAW,qBAAU,CAAE;AAHL,C;AAPL,I,CAaV,iB,GAAoB;AACzB,YAAQ,gBAAM,SAAN,CAAgB;AADC,C;kBAbV,I;AAwFpB","file":"Form.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { validations } from '../../util/validationRules'\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.attachToForm = this.attachToForm.bind(this)\n        this.detachFromForm = this.detachFromForm.bind(this)\n    }\n\n    static defaultProps = {\n        onSubmit: function(){},\n        onError: function(){},\n        onSuccess: function(){},\n    }\n\n    static childContextTypes = {\n      formsy: React.PropTypes.object\n    }\n\n    getChildContext() {\n        return {\n            formsy: {\n                attachToForm: this.attachToForm,\n                detachFromForm: this.detachFromForm,\n            }\n        }\n    }\n\n    componentWillMount() {\n      this.inputs = [];\n    }\n\n    attachToForm(component) {\n        if (this.inputs.indexOf(component) === -1) {\n          this.inputs.push(component);\n        }\n    }\n\n    detachFromForm(component) {\n        var componentPos = this.inputs.indexOf(component);\n\n        if (componentPos !== -1) {\n          this.inputs = this.inputs.slice(0, componentPos)\n            .concat(this.inputs.slice(componentPos + 1));\n        }\n    }\n\n    validation(){\n        let resultComponent;\n        resultComponent = this.inputs.filter((component, index) => {\n            return (!validations[component.props.validations](component.state._value) && component.state._required);\n        })\n\n        resultComponent = resultComponent.length > 0 ? resultComponent[0]: resultComponent;\n\n        if(resultComponent.length === 0){\n            return { isValid: true, message: 'valid validation' }\n        }else{\n            return {isValid: false, message: resultComponent.props.validationError}\n        }\n    }\n    getModel() {\n        let data = {};\n        this.inputs.forEach((component, index) => {\n            data[component.props.name] = component.state._value\n        })\n        return data\n    }\n\n    submit(event) {\n        event && event.preventDefault();\n\n        let result = this.validation()\n        if(result.isValid){\n            let model = this.getModel()\n            this.props.onSuccess.call(null, result, model);\n            this.props.onSubmit.call(null, model)\n        }else{\n            this.props.onError.call(null, result)\n        }\n    }\n\n    render() {\n        var { ...nonFormsyProps } = this.props;\n        return (\n            <form {...nonFormsyProps} onSubmit={(e) => this.submit(e)}>\n                {this.props.children}\n            </form>\n        );\n    }\n};\n"]}