{"version":3,"sources":["../../../src/CheckBox/component/CheckBox.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqB,Q;;;AAEjB,sBAAY,KAAZ,EAAkB;AAAA;;AAAA,gGACR,KADQ;;AAEd,cAAK,KAAL,GAAa;AACT,sBAAU,MAAK,KAAL,CAAW,OAAX,IAAsB,KADvB;AAET,oBAAQ,MAAK,KAAL,CAAW,OAAX,IAAsB,KAFrB;AAGT,uBAAW,MAAK,KAAL,CAAW,QAAX,IAAuB;AAHzB,SAAb;AAFc;AAOjB,K;;;;;6CAUmB;AAChB,iBAAK,OAAL,CAAa,MAAb,CAAoB,YAApB,CAAiC,IAAjC;AACH;;;+CACuB;AACpB,iBAAK,OAAL,CAAa,MAAb,CAAoB,cAApB,CAAmC,IAAnC;AACH;;;iCAEQ,K,EAAM;AACX,iBAAK,QAAL,CAAc,EAAC,QAAQ,KAAT,EAAgB,YAAY,KAA5B,EAAd;AACH;;;mCAEU;AACP,mBAAO,KAAK,KAAL,CAAW,MAAlB;AACH;;;oCAEW,C,EAAG;AACX,iBAAK,QAAL,CAAc,EAAE,MAAF,CAAS,OAAvB;AACH;;;iCAEQ;AAAA;;AAAA,yBACwB,KAAK,KAD7B;AAAA,gBACG,IADH,UACG,IADH;AAAA,gBACS,SADT,UACS,SADT;;AAEL,gBAAM,aAAa,0BACf,kBADe,EAEf,EAAC,WAAW,KAAK,KAAL,CAAW,MAAvB,EAFe,sBAGb,SAHa,EAGD,CAAC,CAAC,SAHD,EAAnB;;AAMA,mBACI;AAAA;gBAAA,EAAO,WAAY,UAAnB;gBACI;AACI,0BAAK,UADT;AAEI,0BAAM,IAFV;AAGI,8BAAU,kBAAC,CAAD;AAAA,+BAAO,OAAK,WAAL,CAAiB,CAAjB,CAAP;AAAA,qBAHd;AAII,oCAAgB,KAAK,KAAL,CAAW;AAJ/B,kBADJ;gBAOI;AAAA;oBAAA;oBAAO,KAAK,KAAL,CAAW;AAAlB;AAPJ,aADJ;AAWH;;;;;;AAzDgB,Q,CAWV,Y,GAAe;AACpB,YAAQ,gBAAM,SAAN,CAAgB,MADJ,E;AAXL,Q,CAeV,Y,GAAe;AAClB,iBAAa;AADK,C;kBAfL,Q;AA0DpB","file":"CheckBox.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport classNames from 'classnames'\n\nexport default class CheckBox extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            _checked: this.props.checked || false,\n            _value: this.props.checked || false,\n            _required: this.props.required || false\n        }\n    }\n\n    static contextTypes = {\n      formsy: React.PropTypes.object // What about required?\n    }\n\n    static defaultProps = {\n        validations: 'isTrue',\n    }\n\n    componentWillMount(){\n        this.context.formsy.attachToForm(this);\n    }\n    componentWillUnmount () {\n        this.context.formsy.detachFromForm(this);\n    }\n\n    setValue(value){\n        this.setState({_value: value, __required: value})\n    }\n\n    getValue() {\n        return this.state._value;\n    }\n\n    changeValue(e) {\n        this.setValue(e.target.checked);\n    }\n\n    render() {\n        const { name, className }  = this.props;\n        const concatName = classNames(\n            'general-checkbox',\n            {'actives': this.state.active},\n            {[className]: !!className}\n        )\n\n        return (\n            <label className={ concatName }>\n                <input\n                    type='checkbox'\n                    name={name}\n                    onChange={(e) => this.changeValue(e)}\n                    defaultChecked={this.state._checked}\n                />\n                <span>{this.props.children}</span>\n            </label>\n        );\n    }\n};\n"]}