{"version":3,"sources":["../../src/util/validationRules.js"],"names":[],"mappings":"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","file":"validationRules.js","sourcesContent":["var isExisty = function (value) {\n  return value !== null && value !== undefined;\n};\n\nvar isEmpty = function (value) {\n  return value === '';\n};\n\nexport let validations = {\n  isDefaultRequiredValue: function (value) {\n    return value === undefined || value === '';\n  },\n  isExisty: function (value) {\n    return isExisty(value);\n  },\n  matchRegexp: function (value, regexp) {\n    return isExisty(value) && !isEmpty(value) && regexp.test(value);\n  },\n  isUndefined: function (value) {\n    return value === undefined;\n  },\n  isEmptyString: function (value) {\n    return isEmpty(value);\n  },\n  isEmail: function (value) {\n    return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n  },\n  isUrl: function (value) {\n    return validations.matchRegexp(value, /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i);\n  },\n  isTrue: function (value) {\n    return value === true;\n  },\n  isFalse: function (value) {\n    return value === false;\n  },\n  isNumeric: function (value) {\n    if (typeof value === 'number') {\n      return true;\n    }\n    return validations.matchRegexp(value, /^[-+]?(?:\\d*[.])?\\d+$/);\n  },\n  isAlpha: function (value) {\n    return validations.matchRegexp(value, /^[A-Z]+$/i);\n  },\n  isAlphanumeric: function (value) {\n    return validations.matchRegexp(value, /^[0-9A-Z]+$/i);\n  },\n  isInt: function (value) {\n    return validations.matchRegexp(value, /^(?:[-+]?(?:0|[1-9]\\d*))$/);\n  },\n  isFloat: function (value) {\n    return validations.matchRegexp(value, /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][\\+\\-]?(?:\\d+))?$/);\n  },\n  isWords: function (value) {\n    return validations.matchRegexp(value, /^[A-Z\\s]+$/i);\n  },\n  isSpecialWords: function ( value) {\n    return validations.matchRegexp(value, /^[A-Z\\s\\u00C0-\\u017F]+$/i);\n  },\n  isLength: function (value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length === length;\n  },\n  equals: function (value, eql) {\n    return !isExisty(value) || isEmpty(value) || value == eql;\n  },\n  maxLength: function (value, length) {\n    return !isExisty(value) || value.length <= length;\n  },\n  minLength: function (value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length >= length;\n  }\n};\n"]}